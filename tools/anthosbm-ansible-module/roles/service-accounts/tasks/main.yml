# Copyright 2021 Google LLC
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Enable Google Cloud APIs for Anthos
  shell: >
    gcloud services enable --project="{{ project_id }}"
    anthos.googleapis.com
    anthosgke.googleapis.com
    cloudresourcemanager.googleapis.com
    container.googleapis.com
    gkeconnect.googleapis.com
    gkehub.googleapis.com
    logging.googleapis.com
    monitoring.googleapis.com
    servicecontrol.googleapis.com
    servicemanagement.googleapis.com
    serviceusage.googleapis.com
    stackdriver.googleapis.com

- name: Create GCR Service Account
  shell: gcloud iam service-accounts create "{{ local_gcr_sa_name }}" --project="{{ project_id }}"

- name: Generate and download GCR Service Account Key
  shell: >
    gcloud iam service-accounts keys create "{{ local_gcr_sa_name }}".json
    --iam-account="{{ local_gcr_sa_name }}@{{ project_id }}.iam.gserviceaccount.com"
    --project="{{ project_id }}"

- name: Create directory for GCP Keys if it does not exist
  ansible.builtin.file:
    path: "{{ gcp_sa_key_dir }}"
    state: directory

- name: Move GCR Service Account key file
  shell: mv "{{ local_gcr_sa_name }}".json "{{ gcp_sa_key_dir }}"

- name: Create Connect Agent Service Account
  shell: gcloud iam service-accounts create "{{ local_connect_agent_sa_name }}" --project="{{ project_id }}"

- name: Grant gkehub.connect role to Connect Agent Service Account
  shell: >
    gcloud projects add-iam-policy-binding "{{ project_id }}"
    --member="serviceAccount:{{ local_connect_agent_sa_name }}@{{ project_id }}.iam.gserviceaccount.com"
    --role="roles/gkehub.connect"

- name: Generate and download Connect Agent Service Account key
  shell: >
    gcloud iam service-accounts keys create "{{ local_connect_agent_sa_name }}".json
    --iam-account="{{ local_connect_agent_sa_name }}@{{ project_id }}.iam.gserviceaccount.com"
    --project="{{ project_id }}"

- name: Move Connect Agent Service Account key file
  shell: mv "{{ local_connect_agent_sa_name }}".json "{{ gcp_sa_key_dir }}"

- name: Create Connect Register Service Account
  shell: gcloud iam service-accounts create "{{ local_connect_register_sa_name }}" --project="{{ project_id }}"

- name: Grant gkehub.admin role to Connect Register Service account
  shell: >
    gcloud projects add-iam-policy-binding "{{ project_id }}"
    --member="serviceAccount:{{ local_connect_register_sa_name }}@{{ project_id }}.iam.gserviceaccount.com"
    --role="roles/gkehub.admin"

- name: Generate and download Connect Register Service Account keys
  shell: >
    gcloud iam service-accounts keys create "{{ local_connect_register_sa_name }}".json
    --iam-account="{{ local_connect_register_sa_name }}@{{ project_id }}.iam.gserviceaccount.com"
    --project="{{ project_id }}"

- name: Move Connect Register Service Account key file
  shell: mv "{{ local_connect_register_sa_name }}".json "{{ gcp_sa_key_dir }}"

- name: Create Cloud Operations Service Account
  shell: gcloud iam service-accounts create "{{ local_cloud_operations_sa_name }}" --project="{{ project_id }}"

- name: Grant logging.logWriter role to Cloud Operations Service Account
  shell: >
    gcloud projects add-iam-policy-binding "{{ project_id }}"
    --member="serviceAccount:{{ local_cloud_operations_sa_name }}@{{ project_id }}.iam.gserviceaccount.com"
    --role="roles/logging.logWriter"

- name: Grant monitoring.metricWriter role to Cloud Operations Service Account
  shell: >
    gcloud projects add-iam-policy-binding "{{ project_id }}"
    --member="serviceAccount:{{ local_cloud_operations_sa_name }}@{{ project_id }}.iam.gserviceaccount.com"
    --role="roles/monitoring.metricWriter"

- name: Grant stackdriver.resourceMetadata.writer role to Cloud Operations Service Account
  shell: >
    gcloud projects add-iam-policy-binding "{{ project_id }}"
    --member="serviceAccount:{{ local_cloud_operations_sa_name }}@{{ project_id }}.iam.gserviceaccount.com"
    --role="roles/stackdriver.resourceMetadata.writer"

- name: Grant monitoring.dashboardEditor role to Cloud Operations Service Account
  shell: >
    gcloud projects add-iam-policy-binding "{{ project_id }}"
    --member="serviceAccount:{{ local_cloud_operations_sa_name }}@{{ project_id }}.iam.gserviceaccount.com"
    --role="roles/monitoring.dashboardEditor"

- name: Generate and download Cloud Operations Service Account keys
  shell: >
    gcloud iam service-accounts keys create "{{ local_cloud_operations_sa_name }}".json
    --iam-account="{{ local_cloud_operations_sa_name }}@{{ project_id }}.iam.gserviceaccount.com"
    --project="{{ project_id }}"

- name: Move Cloud Operations Service Account key file
  shell: mv "{{ local_cloud_operations_sa_name }}".json "{{ gcp_sa_key_dir }}"

- name: Recursively change ownership of GCP Key directory
  ansible.builtin.file:
    path: "{{ gcp_sa_key_dir }}"
    state: directory
    recurse: yes
    owner: "{{ login_user }}"
    group: "{{ login_user_group }}"